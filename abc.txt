(10)
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
public class Main {
 public static void main(String[] args) {
 System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
 WebDriver driver = new ChromeDriver();
 driver.get("https://www.google.com");
 System.out.println(driver.getTitle());
 driver.quit();
 }
}


(11)
<!DOCTYPE html>
<html>
<head>
 <title>Simple JavaScript Program</title>
</head>
<body>
 <p id="output">0</p>
 <button id="increment-button">Increment</button>
 <script>
 const output = document.getElementById("output");
 const incrementButton =
document.getElementById("increment-button");
let count = 0;
 incrementButton.addEventListener("click", function() {
 count += 1;
 output.innerHTML = count;
 });
 </script>
</body>
</html>

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
public class Main {
 private WebDriver driver;
 @Before
 public void setUp() {
 System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
 driver = new ChromeDriver();
 }
 @Test
 public void testIncrementButton() {
 driver.get("file:///path/to/program.html");
 driver.findElement(By.id("increment-button")).click();
 String result = driver.findElement(By.id("output")).getText();
 assert result.equals("1");
 }
@After
 public void tearDown() {
 driver.quit();
 }
}



(12)
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
public class Main {
 private WebDriver driver;
 @Before
 public void setUp() {
 System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
 driver = new ChromeDriver();
}
 @Test
 public void testHomePageLoads() {
 driver.get("http://localhost:8080");
 String title = driver.getTitle();
 assert title.equals("My Containerized Application");
 }
 @Test
 public void testSubmitForm() {
 driver.get("http://localhost:8080");
 driver.findElement(By.name("name")).sendKeys("John Doe");
 driver.findElement(By.name("email")).sendKeys("john.doe@example.com");
 driver.findElement(By.name("submit")).click();
 String result = driver.findElement(By.id("result")).getText();
 assert result.equals("Form submitted successfully!");
 }
 @After
 public void tearDown() {
 driver.quit();
 }
}


(3)
Create a GitHub account if you don't already have one.
 Create a new repository on GitHub.
 Clone the repository to your local machine: $ git clone <repositoryurl>
 Move to the repository directory: $ cd <repository-name>
 Create a new file in the repository and add the source code written in
exercise 1.
 Stage the changes: $ git add <file-name>
 Commit the changes: $ git commit -m "Added source code for a
simple user registration form"
 Push the changes to the remote repository: $ git push origin master
 Verify that the changes are reflected in the repository on GitHub.


(1)
from flask import Flask,render_template,request
app=Flask(__name__)
@app.route('/')
def home():
 return render_template('results.html')
@app.route('/register',methods=['GET','POST'])
def register():
 if request.method=='POST':
  name=request.form['name']
  email=request.form['email']
  password=request.form['password']
  return render_template('success.html')
 return render_template('results.html')
if __name__ == '__main__':
 print("yoo")
 app.run() 

FROM python:3.12.3
WORKDIR /app
COPY . .
RUN pip install --no-cache-dir -r requirements.txt
EXPOSE 8000
CMD ["python", "app.py"]


 <!DOCTYPE html>
<html lang="'en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register</title>
</head>
<body>
    <h1>Register</h1>
    <form action="/register" method="post">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required><br>
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required><br>
        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Success</title>
</head>
<body>
    <h1>Registration Successful</h1>
</body>
</html>
